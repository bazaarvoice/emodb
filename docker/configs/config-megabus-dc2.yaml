# Select service mode - Defaults to STANDARD_ALL
serviceMode: MEGABUS

# A unique name for the cluster that this service node/instance belongs to; use alphanumeric and underscores only.
cluster: local_default

# Where does the system store information such as table definitions?
systemTablePlacement: app_global:sys

dataCenter:
  # Which data center does this server belong to?
  currentDataCenter: datacenter1

  # What is the name of this DataCenter as configured in Cassandra's NetworkTopologyStrategy?
  cassandraDataCenter: datacenter1

  # All CREATE/DROP TABLE operations must occur in a single data center.  Which one is it?
  systemDataCenter: datacenter1

  # Load-balanced highly available base URL for the EmoDB service (ie. Amazon ELB base url).
  dataCenterServiceUri: http://emodb-web-dc2:8080

  # Load-balanced highly available base URL for the EmoDB administration tasks (ie. Amazon ELB base url).
  dataCenterAdminUri: http://emodb-web-dc2:8081

  # Load-balanced highly available base URL for the EmoDB system data center
  # Should be identical to dataCenterServiceUri if this instance resides in the system data center
  systemDataCenterServiceUri: http://emodb-web-dc1:8080

systemOfRecord:
  deltaBlockSizeInKb: 16
  cellTombstoneCompactionEnabled: true
  cellTombstoneBlockLimit: 2

  # How long should we retain historical deltas? To disable, use PT0S
  historyTtl: PT48H

  # All valid placement strings for create table operations.
  validTablePlacements:
    - "app_global:sys"
    - "app_global:default"
    - "app_remote:default"          # a dummy placement specific to a remote data center.  for testing only, not for practical use
    - "ugc_global:ugc"
    - "catalog_global:cat"

  # A per-keyspace map of Cassandra connection settings
  cassandraClusters:
    emo_cluster:
      cluster: emo_cluster
      clusterMetric: emo_sor_metric_name
      dataCenter: datacenter1
      seeds: cassandra-dc1
      # TODO: check if it's multi or self discovered cassandra
      maxConnectionsPerHost: 10
      latencyAware: true
      partitioner: bop
      healthCheck:
        name: sor-cassandra
      keyspaces:
        app_global: {}
        ugc_global: {}
        catalog_global: {}

  slowQueryLog:
    tooManyDeltasThreshold: 20
    console:
      type: console

databus:
  longPollPollingThreadCount: 0
  longPollKeepAliveThreadCount: 0

  # Cassandra connection settings
  cassandra:
    cluster: Databus Cluster
    dataCenter: datacenter1
    seeds: cassandra-dc1
    maxConnectionsPerHost: 10
    latencyAware: true
    partitioner: bop
    healthCheck:
      name: databus-cassandra
    keyspaces:
      databus: {}

queueService:
  # Cassandra connection settings
  cassandra:
    cluster: Databus Cluster
    clusterMetric: Queue Cluster
    dataCenter: datacenter1
    seeds: cassandra-dc1
    maxConnectionsPerHost: 10
    latencyAware: true
    partitioner: bop
    healthCheck:
      name: queue-cassandra
    keyspaces:
      queue: {}

blobStore:
  # All valid placement strings for create table operations.
  validTablePlacements:
    - "media_global:ugc"
    - "media_global_mirror:media"
    - "blob_global:media"
    - "blob_remote:media"     # a dummy placement specific to a remote data center.  for testing only, not for practical use

  # source_placement: dest_placement
  placementsUnderMove:
    "media_global:ugc": media_global_mirror:media

  # A per-keyspace map of Cassandra connection settings
  cassandraClusters:
    media:
      cluster: emo_cluster
      clusterMetric: emo_media_metric_name
      dataCenter: datacenter1
      seeds: cassandra-dc1
      maxConnectionsPerHost: 10
      latencyAware: true
      partitioner: bop
      healthCheck:
        name: blob-cassandra
      keyspaces:
        media_global: {}
        media_global_mirror: {}
        blob_global: {}

  approvedContentTypes:
    - application/json
    - audio/aac
    - audio/mp4
    - audio/mpeg
    - audio/ogg
    - audio/wav
    - image/bmp
    - image/gif
    - image/jpeg
    - image/png
    - image/tiff
    - image/x-xbitmap
    - text/plain
    - video/mp4
    - video/mpeg
    - video/ogg
    - video/quicktime
    - video/x-msvideo

cqlDriver:
  singleRowFetchSize: 100
  singleRowPrefetchLimit: 50
  multiRowFetchSize: 100
  multiRowPrefetchLimit: 50

# Configure the ZooKeeper connection used for SOA service discovery
zooKeeper:
  #  namespace: datacenter1
  connectString: zookeeper:2181

kafka:
  bootstrapServers: kafka:9092
  producer:
    lingerMs: 1000
    batchSize: 65536 # 64KB
    bufferMemory: 33554432 # 32MB

megabus:
  applicationId: megabus-dc2
  refResolverConsumerGroupName: emodb.dc2.megabus.resolver
  delayProcessorConsumerGroupName: emodb.dc2.megabus.delay
  megabusRefTopic:
    name: emodb.dc2.internal.megabus.ref
    partitions: 8
    replicationFactor: 1
  megabusTopic:
    name: emodb.dc2.megabus
    partitions: 8
    replicationFactor: 1
  missingRefTopic:
    name: emodb.dc2.internal.megabus.missing
    partitions: 8
    replicationFactor: 1
  retryRefTopic:
    name: emodb.dc2.internal.megabus.retry
    partitions: 8
    replicationFactor: 1
  boot:
    queueServiceApiKey: local_admin
    scanStatusTable: __system_megabus_boot-dc2
    pendingScanRangeQueueName: megabus-boot-pending-scan-ranges-dc2
    completeScanRangeQueueName: megabus-boot-complete-scan-ranges-dc2
  refProducer:
    batchSize: 400
    skipWaitThreshold: 250
    pollIntervalMs: 100

auth:
  # The admin and replication API keys must be encrypted using the encrypt-configuration-api-key command
  # The unencrypted values are included below to make local testing easier.  It should go without saying that
  # IN A PRODUCTION ENVIRONMENT DO NOT INCLUDE THE UNENCRYPTED KEYS IN THIS FILE!
  adminApiKey:       "zl+p3AU4/EgT8OtR0ZmLrkL70j0SklugAzd+xxYR1Dz/rioe5aXo4yay7sKi7PSKD59h7/HumH7442nGhlR2rw"  # local_admin
  replicationApiKey: "iuOPUIfI0lyxRrNZ9j9Aa68m1yrALBbVMw8kdqb6FVhSwMgOXVsuUblLr9nL73D4xpMVEZZHZr50pCBy1gbjDg"  # local_replication
  compControlApiKey: "local_admin" # compaction-control
  anonymousRoles:
    - anonymous

# Configure the HTTP server that listens for inbound requests
server:
  applicationConnectors:
    - type: instrumentedHttp
      port: 8080
  adminConnectors:
    - type: instrumentedHttp
      port: 8081

  shutdownGracePeriod: 60s

  gzip:
    # Most responses are small and not worth compressing.  Reduce CPU.
    enabled: false

    # If gzip is enabled, don't compress binary data types (ie. BlobStore input/output)
    compressedMimeTypes:
      - text/plain
      - text/html
      - text/xml
      - application/json
      - application/x.json-condition
      - application/x.json-delta

# Configure the HTTP client that EmoService uses to make outbound requests.
httpClient:
  # Timeout after 1 second while connecting.
  connectionTimeout: 1s

  # Timeout after 10 seconds while reading or writing.
  timeout: 10s

  # Keep connections open for 10 minutes.
  timeToLive: 10m

  # Don't track cookies.
  cookiesEnabled: false

  # Most responses are small and not worth compressing.  Reduce CPU.
  gzipEnabled: false
  gzipEnabledForRequests: false

  # Thread pool for JerseyClient's async requests.
  minThreads: 1
  maxThreads: 128

  # Re-use connections so we don't run out of ports if many requests are made in rapid succession.
  keepAlive: 2s

serverStartedListeners:
  - class: com.bazaarvoice.emodb.plugin.lifecycle.LoggingServerStartedListener

# Configure Logback logging
logging:
  level: INFO
  appenders:
    - type: console
      logFormat: "%-5p [%d{ISO8601,UTC}] [%thread] %c: %m%n%xEx"
    - type: file
      currentLogFilename: /app/logs/web-dc1.log
      archive: false
      logFormat: "%-5p [%d{ISO8601,UTC}] [%thread] %c: %m%n%xEx"
  loggers:
    "org.apache.zookeeper": OFF
    "org.apache.curator": WARN
    "com.bazaarvoice.emodb.web.ddl.CassandraThriftFacade": DEBUG
    "com.bazaarvoice.emodb.common.cassandra.CassandraConfiguration": DEBUG
