# Select service mode
serviceMode: STANDARD_BLOB

# A unique name for the cluster that this service node/instance belongs to; use alphanumeric and underscores only.
cluster: local_default

# Define how yammer metrics should be pushed to third-party metrics aggregators/reporters
#datadog:
#  apiKey: <api-key>
#  host: <output-of-"hostname -f">
#  whiteList:  # Exclude measurements that we don't use in Datadog graphs or alerts
#  - ".*$(?<!5MinuteRate|15MinuteRate|meanRate|min|max|mean|stddev|95percentile|99percentile|999percentile)"


dataCenter:
  # Which data center does this server belong to?
  currentDataCenter: datacenter1

  # What is the name of this DataCenter as configured in Cassandra's NetworkTopologyStrategy?
  cassandraDataCenter: datacenter1

  # All CREATE/DROP TABLE operations must occur in a single data center.  Which one is it?
  systemDataCenter: datacenter1

  # Load-balanced highly available base URL for the EmoDB service (ie. Amazon ELB base url).
  dataCenterServiceUri: http://localhost:8580

  # Load-balanced highly available base URL for the EmoDB administration tasks (ie. Amazon ELB base url).
  dataCenterAdminUri: http://localhost:8581

  # Load-balanced highly available base URL for the EmoDB system data center
  # Should be identical to dataCenterServiceUri if this instance resides in the system data center
  systemDataCenterServiceUri: http://localhost:8580


systemOfRecord:
  # Where does the SoR store system information such as table definitions?
  systemTablePlacement: app_global:sys

  # How long should we retain historical deltas? To disable, use PT0S
  historyTtl: PT48H
 
  # All valid placement strings for create table operations.
  validTablePlacements:
  - "app_global:sys"
  - "app_global:default"
  - "app_remote:default"          # a dummy placement specific to a remote data center.  for testing only, not for practical use
  - "ugc_global:ugc"
  - "catalog_global:cat"

  # Minimum number of splits per table for newly created tables.  Higher numbers spread the data around the
  # Cassandra ring more evenly, but lower numbers require fewer get split operations to scan an entire table.
  minimumSplitsPerTable: 8

  # A per-keyspace map of Cassandra connection settings
  cassandraClusters:
    emo_cluster:
      cluster: emo_cluster
      clusterMetric: emo_cluster_metric_name
      dataCenter: datacenter1
      seeds: 127.0.0.1
      # zooKeeperServiceName: dev_sor_ugc_default-cassandra
      thriftPort: 9160
      cqlPort: 9164
      maxConnectionsPerHost: 5
      latencyAware: true
      partitioner: bop
      healthCheck:
        name: sor-cassandra
      keyspaces:
        app_global: {}
        ugc_global: {}
        catalog_global: {}

  slowQueryLog:
    tooManyDeltasThreshold: 20
    console:
      type: console


databus:
  # Cassandra connection settings
  cassandra:
    cluster: Databus Cluster
    dataCenter: datacenter1
    seeds: 127.0.0.1
    # zooKeeperServiceName: dev_datacenter1_databus_default-cassandra
    thriftPort: 9160
    cqlPort: 9164
    maxConnectionsPerHost: 5
    latencyAware: true
    partitioner: bop
    healthCheck:
      name: databus-cassandra
    keyspaces:
      databus: {}


blobStore:
  # Where does the SoR store system information such as blob store table definitions?
  systemTablePlacement: app_global:sys

  # All valid placement strings for create table operations.
  validTablePlacements:
  - "media_global:ugc"

  # Minimum number of splits per table for newly created tables.  Higher numbers spread the data around the
  # Cassandra ring more evenly, but lower numbers require fewer get split operations to scan an entire table.
  minimumSplitsPerTable: 8

  # A per-keyspace map of Cassandra connection settings
  cassandraClusters:
    media_global:
      cluster: emo_cluster
      dataCenter: datacenter1
      seeds: 127.0.0.1
      # zooKeeperServiceName: dev_sor_ugc_default-cassandra
      thriftPort: 9160
      cqlPort: 9164
      maxConnectionsPerHost: 5
      latencyAware: true
      partitioner: bop
      healthCheck:
        name: blob-cassandra
      keyspaces:
        media_global: {}

  approvedContentTypes:
  - application/json
  - audio/aac
  - audio/mp4
  - audio/mpeg
  - audio/ogg
  - audio/wav
  - image/bmp
  - image/gif
  - image/jpeg
  - image/png
  - image/tiff
  - image/x-xbitmap
  - text/plain
  - video/mp4
  - video/mpeg
  - video/ogg
  - video/quicktime
  - video/x-msvideo

queueService:
  # Cassandra connection settings
  cassandra:
    cluster: Databus Cluster
    clusterMetric: Queue Cluster
    dataCenter: datacenter1
    seeds: 127.0.0.1
    # zooKeeperServiceName: dev_datacenter1_databus_default-cassandra
    thriftPort: 9160
    cqlPort: 9164
    maxConnectionsPerHost: 5
    latencyAware: true
    partitioner: bop
    healthCheck:
      name: queue-cassandra
    keyspaces:
      queue: {}


jobs:
  # Placement for table which holds jobs metadata and results
  tablePlacement: "app_global:sys"

# Configure the ZooKeeper connection used for SOA service discovery
#zooKeeper:
  #namespace: datacenter1

  # ZooKeeper connection string that looks like "host:port,host:port,...".
  # It should include all members of the ZooKeeper ensemble.
  #connectString: localhost:2181

auth:
  # The admin and replication API keys must be encrypted using the encrypt-configuration-api-key command
  # The unencrypted values are included below to make local testing easier.  It should go without saying that
  # IN A PRODUCTION ENVIRONMENT DO NOT INCLUDE THE UNENCRYPTED KEYS IN THIS FILE!
  adminApiKey:       "zl+p3AU4/EgT8OtR0ZmLrkL70j0SklugAzd+xxYR1Dz/rioe5aXo4yay7sKi7PSKD59h7/HumH7442nGhlR2rw"  # local_admin
  replicationApiKey: "iuOPUIfI0lyxRrNZ9j9Aa68m1yrALBbVMw8kdqb6FVhSwMgOXVsuUblLr9nL73D4xpMVEZZHZr50pCBy1gbjDg"  # local_replication
  compControlApiKey: "compaction-control" # compaction-control
  tablePlacement: "app_global:sys"
  allowAnonymousAccess: true

# Configure the HTTP server that listens for inbound requests
server:
  applicationConnectors:
    - type: http
      port: 8580
  adminConnectors:
    - type: http
      port: 8581

  gzip:
    # Most responses are small and not worth compressing.  Reduce CPU.
    enabled: false

    # If gzip is enabled, don't compress binary data types (ie. BlobStore input/output)
    compressedMimeTypes:
    - text/plain
    - text/html
    - text/xml
    - application/json
    - application/x.json-condition
    - application/x.json-delta

# Configure the HTTP client that EmoService uses to make outbound requests.
httpClient:
  # Timeout after 1 second while connecting.
  connectionTimeout: 1s

  # Timeout after 10 seconds while reading or writing.
  timeout: 10s

  # Keep connections open for 10 minutes.
  timeToLive: 10m

  # Don't track cookies.
  cookiesEnabled: false

  # Most responses are small and not worth compressing.  Reduce CPU.
  gzipEnabled: false
  gzipEnabledForRequests: false

  # Thread pool for JerseyClient's async requests.
  minThreads: 1
  maxThreads: 128

  # Re-use connections so we don't run out of ports if many requests are made in rapid succession.
  keepAlive: 2s


# Configure Logback logging
logging:
  level: INFO
  loggers:
    "org.apache.zookeeper": OFF
    "org.apache.curator": WARN
    "com.bazaarvoice.emodb.web.ddl.CassandraThriftFacade": WARN
  appenders:
  - type: console
