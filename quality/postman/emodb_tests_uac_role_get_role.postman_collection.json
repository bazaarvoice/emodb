{
	"info": {
		"_postman_id": "12e9cd09-b7a9-4c4a-8e46-8e8749f96a56",
		"name": "EmoDB_Tests_uac_role",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "role",
			"item": [
				{
					"name": "{group}",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get role",
									"item": [
										{
											"name": "TC: Request without api-key",
											"item": [
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 403\", function () {",
																	"    pm.response.to.have.status(403);",
																	"});",
																	"",
																	"pm.test(\"Body matches string\", function () {",
																	"    pm.expect(pm.response.json()).to.eql({\"reason\":\"not authorized\"});",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}",
																	"disabled": true
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "TC: Request with correct group name and id",
											"item": [
												{
													"name": "create Role From Update Request with json media type",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permissions\": [\n        \"et eu amet eiusmod\",\n        \"velit an\"\n    ],\n    \"description\": \"ex ut cupidatat quis\",\n    \"name\": \"quis elit amet\"\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "create Role From Update Request with x.json-create-role media type",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group1\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id1\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group1}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group1}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permissions\": [\n        \"et eu amet eiusmod\",\n        \"velit an\"\n    ],\n    \"description\": \"ex ut cupidatat quis\",\n    \"name\": \"quis elit amet\"\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role json media type",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expectedPermissions = [",
																	"        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"        \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ];",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(\"test with postman\");",
																	"    pm.expect(jsonData.name).to.eql(\"postman test group\");",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions))).to.be.true;",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role x-json-create-role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expectedPermissions = [",
																	"        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"        \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ];",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group1\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id1\"));",
																	"    pm.expect(jsonData.description).to.eql(\"test with postman\");",
																	"    pm.expect(jsonData.name).to.eql(\"postman test group\");",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions))).to.be.true;",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group1}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group1}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group1}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group1}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Request with correct group name and incorrect id",
											"item": [
												{
													"name": "create Role From Update Request with json media type",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permissions\": [\n        \"et eu amet eiusmod\",\n        \"velit an\"\n    ],\n    \"description\": \"ex ut cupidatat quis\",\n    \"name\": \"quis elit amet\"\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "create Role From Update Request with x.json-create-role media type",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group1\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id1\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group1}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group1}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permissions\": [\n        \"et eu amet eiusmod\",\n        \"velit an\"\n    ],\n    \"description\": \"ex ut cupidatat quis\",\n    \"name\": \"quis elit amet\"\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role json media type",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 404\", function () {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"message\",\"suppressed\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\")+\"_incorrect\");",
																	"    pm.expect(jsonData.message).to.eql(\"Role not found\");",
																	"    pm.expect(jsonData.suppressed).to.eql([]);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}_incorrect?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}_incorrect"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role x-json-create-role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 404\", function () {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"message\",\"suppressed\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group1\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id1\")+\"_incorrect\");",
																	"    pm.expect(jsonData.message).to.eql(\"Role not found\");",
																	"    pm.expect(jsonData.suppressed).to.eql([]);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group1}}/{{id1}}_incorrect?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group1}}",
																"{{id1}}_incorrect"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group1}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group1}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Request with incorrect group name and correct id",
											"item": [
												{
													"name": "create Role From Update Request with json media type",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permissions\": [\n        \"et eu amet eiusmod\",\n        \"velit an\"\n    ],\n    \"description\": \"ex ut cupidatat quis\",\n    \"name\": \"quis elit amet\"\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "create Role From Update Request with x.json-create-role media type",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group1\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id1\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group1}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group1}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permissions\": [\n        \"et eu amet eiusmod\",\n        \"velit an\"\n    ],\n    \"description\": \"ex ut cupidatat quis\",\n    \"name\": \"quis elit amet\"\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role json media type",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 404\", function () {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"message\",\"suppressed\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\")+\"_incorrect\");",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.message).to.eql(\"Role not found\");",
																	"    pm.expect(jsonData.suppressed).to.eql([]);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}_incorrect/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}_incorrect",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role x-json-create-role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 404\", function () {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"message\",\"suppressed\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group1\")+\"_incorrect\");",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id1\"));",
																	"    pm.expect(jsonData.message).to.eql(\"Role not found\");",
																	"    pm.expect(jsonData.suppressed).to.eql([]);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group1}}_incorrect/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group1}}_incorrect",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group1}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group1}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Request with _ group name and id",
											"item": [
												{
													"name": "create Role From Update Request with json media type",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"_\");",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"_\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permissions\": [\n        \"et eu amet eiusmod\",\n        \"velit an\"\n    ],\n    \"description\": \"ex ut cupidatat quis\",\n    \"name\": \"quis elit amet\"\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "create Role From Update Request with x.json-create-role media type",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"id1\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"permissions\": [\n        \"et eu amet eiusmod\",\n        \"velit an\"\n    ],\n    \"description\": \"ex ut cupidatat quis\",\n    \"name\": \"quis elit amet\"\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role json media type",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expectedPermissions = [",
																	"        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"        \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ];",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(\"test with postman\");",
																	"    pm.expect(jsonData.name).to.eql(\"postman test group\");",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions))).to.be.true;",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role x-json-create-role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"var expectedPermissions = [",
																	"        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"        \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ];",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id1\"));",
																	"    pm.expect(jsonData.description).to.eql(\"test with postman\");",
																	"    pm.expect(jsonData.name).to.eql(\"postman test group\");",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions))).to.be.true;",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id1}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id1}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "get Role",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
													"host": [
														"{{baseurl_dc1}}"
													],
													"path": [
														"uac",
														"1",
														"role",
														"{{group}}",
														"{{id}}"
													],
													"query": [
														{
															"key": "APIKey",
															"value": "{{api_key}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"variable": [
																{
																	"key": "group"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"description\", \"test with postman\");",
							"pm.environment.set(\"name\", \"postman test group\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}
