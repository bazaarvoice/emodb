{
	"info": {
		"_postman_id": "ddb923af-f9b0-4903-8999-dbe58e4fd4d2",
		"name": "emodb_tests_uac_role_update_role",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "role",
			"item": [
				{
					"name": "{group}",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update role",
									"item": [
										{
											"name": "TC: Update role with json media type with key without permissions",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 403\", function () {",
																	"    pm.response.to.have.status(403);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"reason\"];",
																	"",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.reason).to.eql(\"not authorized\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key_no_rights}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key_no_rights}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role with x.json-update-role media type with key without permissions",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 403\", function () {",
																	"    pm.response.to.have.status(403);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"reason\"];",
																	"",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.reason).to.eql(\"not authorized\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-update-role"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key_no_rights}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key_no_rights}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role with json media type with all body data",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": \"description update\",\n    \"name\": \"{{group}} name update\",\n    \"id\": \"{{id}}\",\n    \"group\":\"{{group}}\",\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\",\n        \"new_permission\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"new_permission\",",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData, \"response properties do not correspond to expected\").to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group, \"group is not as expected\").to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id, \"id is not as expected\").to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description, \"description is not as expected\").to.eql(pm.environment.get(\"description\"));",
																	"    console.log(\"jsonData\", jsonData.permissions);",
																	"    console.log(\"expectedPermissions \", expectedPermissions);",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name, \"name is not as expected\").to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"description update\");",
																	"pm.environment.set(\"name\", pm.environment.get(\"group\")+\" name update\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role with x.json-update-role media type with all body data",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-update-role"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": \"description update\",\n    \"revokeOtherPermissions\": false,\n    \"name\": \"{{group}} name update\",\n    \"grantPermissions\": [\n        \"1\",\n        \"3\",\n        \"4\"\n    ],\n    \"revokePermissions\": [\n        \"2\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"3\",",
																	"    \"4\",",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"description update\");",
																	"pm.environment.set(\"name\", pm.environment.get(\"group\")+\" name update\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role with json media type with empty body data",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 400\", function () {",
																	"    pm.response.to.have.status(400);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"message\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.message).to.eql(\"Instantiation of [simple type, class com.bazaarvoice.emodb.uac.api.EmoRole] value failed: id\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    console.log(\"jsonData \", jsonData);",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"permissions\",\"description\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"test with postman\");",
																	"pm.environment.set(\"name\", \"postman test group\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role with x.json-update-role media type with empty body data",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",\n        \"databus|poll|if(like(\\\"postman*\\\"))\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"    \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-update-role"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"        \"sor|read|intrinsic(\\\"~table\\\":like(\\\"postman*\\\"))\",",
																	"        \"databus|poll|if(like(\\\"postman*\\\"))\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    console.log(\"jsonData.permissions \", _.sortBy(jsonData.permissions));",
																	"    console.log(\"expectedPermissions \", _.sortBy(expectedPermissions));",
																	"",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"test with postman\");",
																	"pm.environment.set(\"name\", \"postman test group\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role with x.json-update-role media type with the same permissions in grant and revoke",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"1\",\n        \"2\",\n        \"3\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"2\",",
																	"    \"3\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 400\", function () {",
																	"    pm.response.to.have.status(400);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    pm.expect(pm.response.text()).to.eql(\"com.fasterxml.jackson.databind.JsonMappingException: Cannot both grant and revoke the same permission (through reference chain: com.bazaarvoice.emodb.uac.api.UpdateEmoRoleRequest[\\\"revokePermissions\\\"])\");",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-update-role"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": \"description update\",\n    \"revokeOtherPermissions\": false,\n    \"name\": \"{{group}} name update\",\n    \"grantPermissions\": [\n        \"1\",\n        \"2\"\n    ],\n    \"revokePermissions\": [\n        \"1\",\n        \"2\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"2\",",
																	"    \"3\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"test with postman\");",
																	"pm.environment.set(\"name\", \"postman test group\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role  with x.json-update-role media type with new permissions without revoking existing",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"1\",\n        \"2\",\n        \"3\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"2\",",
																	"    \"3\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    pm.expect(pm.response.json().success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-update-role"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": \"description update\",\n    \"revokeOtherPermissions\": false,\n    \"name\": \"{{group}} name update\",\n    \"grantPermissions\": [\n        \"4\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"2\",",
																	"    \"3\",",
																	"    \"4\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"description update\");",
																	"pm.environment.set(\"name\", pm.environment.get(\"group\") + \" name update\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role  with x.json-update-role media type with new permissions with revoking existing",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"1\",\n        \"2\",\n        \"3\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"2\",",
																	"    \"3\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    pm.expect(pm.response.json().success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-update-role"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": \"description update\",\n    \"revokeOtherPermissions\": true,\n    \"name\": \"{{group}} name update\",\n    \"grantPermissions\": [\n        \"4\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"4\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"description update\");",
																	"pm.environment.set(\"name\", pm.environment.get(\"group\") + \" name update\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role  with x.json-update-role media type with new permissions with revoking some of existing",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"1\",\n        \"2\",\n        \"3\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"2\",",
																	"    \"3\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    pm.expect(pm.response.json().success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-update-role"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": \"description update\",\n    \"revokeOtherPermissions\": true,\n    \"name\": \"{{group}} name update\",\n    \"grantPermissions\": [\n        \"4\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"4\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"description update\");",
																	"pm.environment.set(\"name\", pm.environment.get(\"group\") + \" name update\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role  with x.json-update-role media type without revokePermissions, grantPermissions  and revokeOtherPermissions=true",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"1\",\n        \"2\",\n        \"3\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"2\",",
																	"    \"3\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    pm.expect(pm.response.json().success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-update-role"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": \"description update\",\n    \"revokeOtherPermissions\": true,\n    \"name\": \"{{group}} name update\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"description update\");",
																	"pm.environment.set(\"name\", pm.environment.get(\"group\") + \" name update\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										},
										{
											"name": "TC: Update role  with x.json-update-role media type without revokePermissions, grantPermissions and revokeOtherPermissions=false",
											"item": [
												{
													"name": "create Role From Update Request",
													"event": [
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const uuid = require('uuid');",
																	"pm.environment.set(\"group\", \"postman_\"+ uuid.v4());",
																	"pm.environment.set(\"id\", \"postman_\"+uuid.v4());"
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 201\", function () {",
																	"    pm.response.to.have.status(201);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-create-role",
																"disabled": true
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"permissions\": [\n        \"1\",\n        \"2\",\n        \"3\"\n    ],\n    \n    \"description\": \"test with postman\",\n    \"name\": \"postman test group\",\n    \"id\": \"{{id}}\",\n    \"group\": \"{{group}}\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": ""
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "get Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"2\",",
																	"    \"3\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"permissions\",\"name\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(_.isEqual(_.sortBy(jsonData.permissions), _.sortBy(expectedPermissions)), \"permissions are not as expected\").to.be.true;",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "update Role From Update Request",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    pm.expect(pm.response.json().success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x.json-update-role"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"description\": \"description update\",\n    \"revokeOtherPermissions\": false,\n    \"name\": \"{{group}} name update\"\n}"
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"description\": \"ex quis voluptate consectetur\",\n    \"descriptionPresent\": false,\n    \"revokeOtherPermissions\": false,\n    \"name\": \"adipisicing sit nulla\",\n    \"namePresent\": false,\n    \"grantPermissions\": [\n        \"aute\",\n        \"et occaecat\"\n    ],\n    \"revokePermissions\": [\n        \"qui aliqua deserunt officia\",\n        \"magna ea officia aliqua\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												},
												{
													"name": "get Role after update",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"var expectedPermissions = [",
																	"    \"1\",",
																	"    \"2\",",
																	"    \"3\"",
																	"    ]",
																	"",
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"group\",\"id\",\"description\",\"name\",\"permissions\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.group).to.eql(pm.environment.get(\"group\"));",
																	"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
																	"    pm.expect(jsonData.description).to.eql(pm.environment.get(\"description\"));",
																	"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\")); ",
																	"});",
																	"",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"pm.environment.set(\"description\", \"description update\");",
																	"pm.environment.set(\"name\", pm.environment.get(\"group\") + \" name update\");"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"group\": \"laboris laborum sunt cillum\",\n \"id\": \"tempor aliqua anim\",\n \"permissions\": [\n  \"sint commodo\",\n  \"culpa exercitation\"\n ],\n \"description\": \"ex sint sunt qui\",\n \"name\": \"occaecat consequat Excepteur dolor\"\n}"
														}
													]
												},
												{
													"name": "delete Role",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	"pm.test(\"Assert response\", function () {",
																	"    var jsonData = pm.response.json();",
																	"    var expectedResponseProperties = [\"success\"];",
																	"    ",
																	"    pm.expect(jsonData).to.have.keys(expectedResponseProperties);",
																	"    pm.expect(jsonData.success).to.eql(true);",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}?APIKey={{api_key}}",
															"host": [
																"{{baseurl_dc1}}"
															],
															"path": [
																"uac",
																"1",
																"role",
																"{{group}}",
																"{{id}}"
															],
															"query": [
																{
																	"key": "APIKey",
																	"value": "{{api_key}}"
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseurl_dc1}}/uac/1/role/{{group}}/{{id}}",
																	"host": [
																		"{{baseurl_dc1}}"
																	],
																	"path": [
																		"uac",
																		"1",
																		"role",
																		"{{group}}",
																		"{{id}}"
																	],
																	"variable": [
																		{
																			"key": "group"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"success\": false,\n \"debug\": {}\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"description\", \"test with postman\");",
							"pm.environment.set(\"name\", \"postman test group\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}
