{
	"info": {
		"_postman_id": "170ac325-94ac-4ad5-8855-8054a99ea124",
		"name": "EmoDB_Tests_uac_migrate_api-key",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TC: Request without api-key",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before migration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "migrate Api Key",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let apikey = \"\";",
									"var character = pm.variables.replaceIn('{{$randomAlphaNumeric}}')",
									"for(; apikey.length < 48; apikey += character) {",
									"    character = pm.variables.replaceIn('{{$randomAlphaNumeric}}');",
									"}",
									"pm.environment.set(\"key2\", apikey);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"reason\"]);",
									"    pm.expect(jsonData.reason).to.eql(\"not authorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key={{key2}}&APIKey={{api_key_no_rights}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}",
								"migrate"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key2}}"
								},
								{
									"key": "APIKey",
									"value": "{{api_key_no_rights}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key=",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}",
										"migrate"
									],
									"query": [
										{
											"key": "key",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key after migration old key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.maskedKey).to.include(\"****************************************\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key after migration new key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"message\",\"suppressed\"]);",
									"    pm.expect(jsonData.message).to.eql(\"API Key not found\");",
									"    pm.expect(jsonData.suppressed).to.eql([]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{key2}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{key2}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Migrate api-key",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before migration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "migrate Api Key",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let apikey = \"\";",
									"var character = pm.variables.replaceIn('{{$randomAlphaNumeric}}')",
									"for(; apikey.length < 48; apikey += character) {",
									"    character = pm.variables.replaceIn('{{$randomAlphaNumeric}}');",
									"}",
									"pm.environment.set(\"key2\", apikey);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									" var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"key2\", jsonData.key);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.key).to.not.eql(pm.environment.get(\"key\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key={{key2}}&APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}",
								"migrate"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key2}}"
								},
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key=",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}",
										"migrate"
									],
									"query": [
										{
											"key": "key",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key after migration old key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.maskedKey).to.include(pm.environment.get(\"startKeySubStr\")+ \"****************************************\" + pm.environment.get(\"endKeySubStr\"));",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startKeySubStr = pm.environment.get(\"key2\").substring(0, 4);",
									"var endKeySubStr = pm.environment.get(\"key2\").substring(44, 48);",
									"",
									"pm.environment.set(\"startKeySubStr\", startKeySubStr);",
									"pm.environment.set(\"endKeySubStr\", endKeySubStr);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Migrate api-key with special character in key",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before migration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "migrate Api Key",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let apikey = \"\";",
									"var character = pm.variables.replaceIn('{{$randomAlphaNumeric}}')",
									"for(; apikey.length < 48; apikey += character) {",
									"    character = pm.variables.replaceIn('{{$randomAlphaNumeric}}');",
									"}",
									"apikey += \"!\"",
									"pm.environment.set(\"key2\", apikey);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseData = pm.response.text();",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    pm.expect(responseData).to.eql(\"API key must be exactly 48 alpha-numeric characters\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key={{key2}}&APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}",
								"migrate"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key2}}"
								},
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key=",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}",
										"migrate"
									],
									"query": [
										{
											"key": "key",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key after migration old key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.maskedKey).to.include(pm.environment.get(\"startKeySubStr\")+ \"****************************************\" + pm.environment.get(\"endKeySubStr\"));",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startKeySubStr = pm.environment.get(\"key2\").substring(0, 4);",
									"var endKeySubStr = pm.environment.get(\"key2\").substring(44, 48);",
									"",
									"pm.environment.set(\"startKeySubStr\", startKeySubStr);",
									"pm.environment.set(\"endKeySubStr\", endKeySubStr);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Migrate api-key to existing key",
			"item": [
				{
					"name": "create Api Key 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "create Api Key 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id2', pm.response.json().id);",
									"pm.environment.set('key2', pm.response.json().key)",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before migration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "migrate Api Key",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									" var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    pm.expect(jsonData).to.have.keys([\"message\",\"suppressed\"]);",
									"    pm.expect(jsonData.message).to.eql(\"API Key exists\");",
									"    pm.expect(jsonData.suppressed).to.not.eql(\"[]\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key={{key2}}&APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}",
								"migrate"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key2}}"
								},
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key=",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}",
										"migrate"
									],
									"query": [
										{
											"key": "key",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key after migration old key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.maskedKey).to.include(pm.environment.get(\"startKeySubStr\")+ \"****************************************\" + pm.environment.get(\"endKeySubStr\"));",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startKeySubStr = pm.environment.get(\"key\").substring(0, 4);",
									"var endKeySubStr = pm.environment.get(\"key\").substring(44, 48);",
									"",
									"pm.environment.set(\"startKeySubStr\", startKeySubStr);",
									"pm.environment.set(\"endKeySubStr\", endKeySubStr);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "delete Api Key 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id2}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id2}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "migrate Api Key",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key={{key2}}&APIKey={{api_key}}",
					"host": [
						"{{baseurl_dc1}}"
					],
					"path": [
						"uac",
						"1",
						"api-key",
						"{{id}}",
						"migrate"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key2}}"
						},
						{
							"key": "APIKey",
							"value": "{{api_key}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}/migrate?key=",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}",
								"migrate"
							],
							"query": [
								{
									"key": "key",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	]
}
