{
	"info": {
		"_postman_id": "bac38766-8c0a-4a3c-8ae4-822a8be7c144",
		"name": "EmoDB_uac_put_api-key",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TC: Update api-key without permissions",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"reason\"]);",
									"    pm.expect(jsonData.reason).to.eql(\"not authorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{id}}\",\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"description\": \"updated description\",\n    \"owner\": \"updated owner\",\n    \"roles\": [\n        \"roleid1\",\n        \"roleid2\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key_no_rights}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key_no_rights}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"success\"]);",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{id}}\",\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"description\": \"updated description\",\n    \"owner\": \"updated owner\",\n    \"roles\": [\n        \"roleid1\",\n        \"roleid2\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"updated owner\");",
									"    pm.expect(jsonData.description).to.eql(\"updated description\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.be.oneOf([\"roleid2\",\"roleid1\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key with conflicting id",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.text();",
									"    pm.expect(jsonData).to.eql(\"Body contains conflicting API key identifier\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{id}}different\",\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"description\": \"updated description\",\n    \"owner\": \"updated owner\",\n    \"roles\": [\n        \"roleid1\",\n        \"roleid2\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key with less rights",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\",\n    \"roles\": [\n        {\n            \"group\": \"_\",\n            \"id\": \"roleid1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"success\"]);",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{id}}\",\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"description\": \"updated description\",\n    \"owner\": \"updated owner\",\n    \"roles\": [\n        \"roleid2\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"updated owner\");",
									"    pm.expect(jsonData.description).to.eql(\"updated description\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key with more rights",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\",\n    \"roles\": [\n        {\n            \"group\": \"_\",\n            \"id\": \"roleid1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"success\"]);",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{id}}\",\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"description\": \"updated description\",\n    \"owner\": \"updated owner\",\n    \"roles\": [\n        \"roleid1\",\n        \"roleid2\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"updated owner\");",
									"    pm.expect(jsonData.description).to.eql(\"updated description\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.be.oneOf([\"roleid2\",\"roleid1\"]);",
									"    pm.expect(jsonData.roles[1].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[1].id).to.be.oneOf([\"roleid2\",\"roleid1\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key without roles assigned",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\",\n    \"roles\": [\n        {\n            \"group\": \"_\",\n            \"id\": \"roleid1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"success\"]);",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{id}}\",\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"description\": \"updated description\",\n    \"owner\": \"updated owner\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"updated owner\");",
									"    pm.expect(jsonData.description).to.eql(\"updated description\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key without description",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\",\n    \"roles\": [\n        {\n            \"group\": \"_\",\n            \"id\": \"roleid1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"success\"]);",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{id}}\",\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"owner\": \"updated owner\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key after key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"updated owner\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key without owner",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\",\n    \"roles\": [\n        {\n            \"group\": \"_\",\n            \"id\": \"roleid1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.text();",
									"    pm.expect(jsonData).to.eql(\"Owner cannot be null or empty\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":\"{{id}}\",\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"description\": \"updated description\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key after key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key with empty body",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\",\n    \"roles\": [\n        {\n            \"group\": \"_\",\n            \"id\": \"roleid1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"message\"]);",
									"    pm.expect(jsonData.message).to.eql(\"Instantiation of [simple type, class com.bazaarvoice.emodb.uac.api.EmoApiKey] value failed: id\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key after key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key without id",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\",\n    \"roles\": [\n        {\n            \"group\": \"_\",\n            \"id\": \"roleid1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"message\"]);",
									"    pm.expect(jsonData.message).to.eql(\"Instantiation of [simple type, class com.bazaarvoice.emodb.uac.api.EmoApiKey] value failed: id\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"owner\": \"updated owner\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key after key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key without maskedKey",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\",\n    \"roles\": [\n        {\n            \"group\": \"_\",\n            \"id\": \"roleid1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"message\"]);",
									"    pm.expect(jsonData.message).to.eql(\"Instantiation of [simple type, class com.bazaarvoice.emodb.uac.api.EmoApiKey] value failed: maskedKey\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var issuedDate = new Date().toISOString();",
									"pm.environment.set(\"issuedDate\", issuedDate)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{id}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"owner\": \"updated owner\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key after key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "TC: Update api-key without issued",
			"item": [
				{
					"name": "create Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('id', pm.response.json().id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"key\",\"id\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x.json-create-api-key"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"postman_test_api-key\",\n    \"owner\": \"postman\",\n    \"roles\": [\n        {\n            \"group\": \"_\",\n            \"id\": \"roleid1\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"postman\",\n    \"owner\": \"postman\"\n}"
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key?key={{api-key}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key"
									],
									"query": [
										{
											"key": "key",
											"value": "{{api-key}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Api Key before key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "update Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"message\"]);",
									"    pm.expect(jsonData.message).to.eql(\"Instantiation of [simple type, class com.bazaarvoice.emodb.uac.api.EmoApiKey] value failed: issued\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{id}}\",\n    \"maskedKey\": \"{{key1}}\",\n    \"owner\": \"updated owner\"\n}"
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				},
				{
					"name": "get Api Key after key update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.keys([\"id\",\"maskedKey\",\"issued\",\"owner\",\"description\",\"roles\"]);",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"id\"));",
									"    pm.expect(jsonData.owner).to.eql(\"postman\");",
									"    pm.expect(jsonData.description).to.eql(\"postman_test_api-key\");",
									"    pm.expect(jsonData.roles[0]).to.have.keys(\"group\",\"id\");",
									"    pm.expect(jsonData.roles[0].group).to.eql(\"_\");",
									"    pm.expect(jsonData.roles[0].id).to.eql(\"roleid1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete Api Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Assert response body\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}?APIKey={{api_key}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"query": [
								{
									"key": "APIKey",
									"value": "{{api_key}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"uac",
										"1",
										"api-key",
										"{{id}}"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		},
		{
			"name": "update Api Key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var issuedDate = new Date().toISOString();",
							"pm.environment.set(\"issuedDate\", issuedDate)",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\":\"{{id1}}1\",\n    \"maskedKey\": \"{{key1}}\",\n    \"issued\": \"{{issuedDate}}\",\n    \"description\": \"updated description\",\n    \"owner\": \"updated owner\",\n    \"roles\": [\n        \"roleid1\",\n        \"roleid2\"\n    ]\n}"
				},
				"url": {
					"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id1}}?APIKey={{api_key}}",
					"host": [
						"{{baseurl_dc1}}"
					],
					"path": [
						"uac",
						"1",
						"api-key",
						"{{id1}}"
					],
					"query": [
						{
							"key": "APIKey",
							"value": "{{api_key}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "successful operation",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseurl_dc1}}/uac/1/api-key/{{id}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"uac",
								"1",
								"api-key",
								"{{id}}"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"success\": false,\n \"debug\": {}\n}"
				}
			]
		}
	]
}
