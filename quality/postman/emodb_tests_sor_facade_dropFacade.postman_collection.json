{
	"info": {
		"_postman_id": "16deef9b-d343-46f2-9f2e-8be976f9d593",
		"name": "EmoDB_Tests_sor_facade_dropFacade",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Drops a Facade",
			"item": [
				{
					"name": "TC: Request without api-key",
					"item": [
						{
							"name": "Drops a Facade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.json()).to.eql({\"reason\":\"not authorized\"});",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-BV-API-Key",
										"value": "{{api_key_no_rights}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseurl_dc1}}/sor/1/_facade/not_existing_table",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"sor",
										"1",
										"_facade",
										"not_existing_table"
									],
									"query": [
										{
											"key": "audit",
											"value": ""
										},
										{
											"key": "placement",
											"value": ""
										}
									]
								},
								"description": "Returns a SuccessResponse if facade is dropped"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseurl_dc1}}/sor/1/_facade/{{table}}",
											"host": [
												"{{baseurl_dc1}}"
											],
											"path": [
												"sor",
												"1",
												"_facade",
												"{{table}}"
											],
											"query": [
												{
													"key": "audit",
													"value": ""
												},
												{
													"key": "placement",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "table"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"debug\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "TC: Request without placement to drop facade",
					"item": [
						{
							"name": "Drops a Facade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.eql('Missing required placement.');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-BV-API-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseurl_dc1}}/sor/1/_facade/{{table}}?audit=comment:'facade+deletion'",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"sor",
										"1",
										"_facade",
										"{{table}}"
									],
									"query": [
										{
											"key": "audit",
											"value": "comment:'facade+deletion'"
										},
										{
											"key": "placement",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "table",
											"value": "",
											"description": "(Required) "
										}
									]
								},
								"description": "Returns a SuccessResponse if facade is dropped"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseurl_dc1}}/sor/1/_facade/{{table}}",
											"host": [
												"{{baseurl_dc1}}"
											],
											"path": [
												"sor",
												"1",
												"_facade",
												"{{table}}"
											],
											"query": [
												{
													"key": "audit",
													"value": ""
												},
												{
													"key": "placement",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "table"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"debug\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "TC: Request without audit param",
					"item": [
						{
							"name": "Drops a Facade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.eql('Missing required query parameter: audit');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-BV-API-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseurl_dc1}}/sor/1/_facade/{{table}}?placement=ugc_global:ugc",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"sor",
										"1",
										"_facade",
										"{{table}}"
									],
									"query": [
										{
											"key": "audit",
											"value": "comment:'facade+deletion'",
											"disabled": true
										},
										{
											"key": "placement",
											"value": "ugc_global:ugc"
										}
									],
									"variable": [
										{
											"key": "table",
											"value": "",
											"description": "(Required) "
										}
									]
								},
								"description": "Returns a SuccessResponse if facade is dropped"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseurl_dc1}}/sor/1/_facade/{{table}}",
											"host": [
												"{{baseurl_dc1}}"
											],
											"path": [
												"sor",
												"1",
												"_facade",
												"{{table}}"
											],
											"query": [
												{
													"key": "audit",
													"value": ""
												},
												{
													"key": "placement",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "table"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"debug\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "TC: Drop facade",
					"item": [
						{
							"name": "Creates table /sor/1/_table/{table}",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uuid = require('uuid');",
											"pm.environment.set('table', 'table_'+uuid.v4());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const isLocal = pm.environment.get(\"baseurl_dc1\").includes('localhost');",
											"",
											"if(!isLocal) {",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Body matches string\", function () {",
											"        pm.expect(pm.response.json()).to.eql({\"success\":true});",
											"    });",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-BV-API-Key",
										"type": "text",
										"value": "{{api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\":\"create_table_test\",\n    \"client\":\"iuliia_customer\",\n    \"test_field\":\"postman\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl_dc1}}/sor/1/_table/{{table}}?options=placement:'ugc_eu:ugc'&audit=comment:'initial+provisioning'",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"sor",
										"1",
										"_table",
										"{{table}}"
									],
									"query": [
										{
											"key": "options",
											"value": "placement:'ugc_eu:ugc'"
										},
										{
											"key": "audit",
											"value": "comment:'initial+provisioning'"
										}
									]
								},
								"description": "Returns a SuccessResponse if table is created"
							},
							"response": []
						},
						{
							"name": "Drops a Facade before it is created",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const isLocal = pm.environment.get(\"baseurl_dc2\").includes('localhost');",
											"",
											"if(!isLocal) {",
											"    pm.test(\"Status code is 500\", function () {",
											"        pm.response.to.have.status(500);",
											"    });",
											"",
											"    pm.test(\"Body matches string\", function () {",
											"        pm.expect(pm.response.json()).to.eql({",
											"            message:`Unknown facade: ${pm.environment.get('table')} in ugc_us:ugc`,",
											"            facade: pm.environment.get('table'),",
											"            suppressed:[]",
											"        });",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-BV-API-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseurl_dc2}}/sor/1/_facade/{{table}}?audit=comment:'facade+deletion'&placement=ugc_us:ugc",
									"host": [
										"{{baseurl_dc2}}"
									],
									"path": [
										"sor",
										"1",
										"_facade",
										"{{table}}"
									],
									"query": [
										{
											"key": "audit",
											"value": "comment:'facade+deletion'"
										},
										{
											"key": "placement",
											"value": "ugc_us:ugc"
										}
									]
								},
								"description": "Returns a SuccessResponse if facade is dropped"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseurl_dc2}}/sor/1/_facade/{{table}}",
											"host": [
												"{{baseurl_dc2}}"
											],
											"path": [
												"sor",
												"1",
												"_facade",
												"{{table}}"
											],
											"query": [
												{
													"key": "audit",
													"value": ""
												},
												{
													"key": "placement",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "table"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"debug\": {}\n}"
								}
							]
						},
						{
							"name": "Creates a facade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const isLocal = pm.environment.get(\"baseurl_dc2\").includes('localhost');",
											"",
											"if(!isLocal) {",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Body matches string\", function () {",
											"        pm.expect(pm.response.json()).to.eql({\"success\":true});",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-BV-Api-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseurl_dc2}}/sor/1/_facade/{{table}}?options=placement:'ugc_us:ugc'&audit=audit=comment:'initial+facade+provisioning'",
									"host": [
										"{{baseurl_dc2}}"
									],
									"path": [
										"sor",
										"1",
										"_facade",
										"{{table}}"
									],
									"query": [
										{
											"key": "options",
											"value": "placement:'ugc_us:ugc'"
										},
										{
											"key": "audit",
											"value": "audit=comment:'initial+facade+provisioning'"
										}
									]
								},
								"description": "Returns a SuccessResponse if facade is created"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseurl_dc2}}/sor/1/_facade/{{table}}",
											"host": [
												"{{baseurl_dc2}}"
											],
											"path": [
												"sor",
												"1",
												"_facade",
												"{{table}}"
											],
											"query": [
												{
													"key": "options",
													"value": ""
												},
												{
													"key": "audit",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "table"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"debug\": {}\n}"
								}
							]
						},
						{
							"name": "Drops a Facade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const isLocal = pm.environment.get(\"baseurl_dc2\").includes('localhost');",
											"",
											"if(!isLocal) {",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Body matches string\", function () {",
											"        pm.expect(pm.response.json()).to.eql({\"success\":true});",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-BV-API-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseurl_dc2}}/sor/1/_facade/{{table}}?audit=comment:'facade+deletion'&placement=ugc_us:ugc",
									"host": [
										"{{baseurl_dc2}}"
									],
									"path": [
										"sor",
										"1",
										"_facade",
										"{{table}}"
									],
									"query": [
										{
											"key": "audit",
											"value": "comment:'facade+deletion'"
										},
										{
											"key": "placement",
											"value": "ugc_us:ugc"
										}
									]
								},
								"description": "Returns a SuccessResponse if facade is dropped"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseurl_dc2}}/sor/1/_facade/{{table}}",
											"host": [
												"{{baseurl_dc2}}"
											],
											"path": [
												"sor",
												"1",
												"_facade",
												"{{table}}"
											],
											"query": [
												{
													"key": "audit",
													"value": ""
												},
												{
													"key": "placement",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "table"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"debug\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "TC: Request with not existing placement",
					"item": [
						{
							"name": "Creates table /sor/1/_table/{table}",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uuid = require('uuid');",
											"pm.environment.set('table', 'table_'+uuid.v4());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const isLocal = pm.environment.get(\"baseurl_dc1\").includes('localhost');",
											"",
											"if(!isLocal) {",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Body matches string\", function () {",
											"        pm.expect(pm.response.json()).to.eql({\"success\":true});",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-BV-API-Key",
										"type": "text",
										"value": "{{api_key}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\":\"create_table_test\",\n    \"client\":\"iuliia_customer\",\n    \"test_field\":\"postman\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl_dc1}}/sor/1/_table/{{table}}?options=placement:'ugc_eu:ugc'&audit=comment:'initial+provisioning'",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"sor",
										"1",
										"_table",
										"{{table}}"
									],
									"query": [
										{
											"key": "options",
											"value": "placement:'ugc_eu:ugc'"
										},
										{
											"key": "audit",
											"value": "comment:'initial+provisioning'"
										}
									]
								},
								"description": "Returns a SuccessResponse if table is created"
							},
							"response": []
						},
						{
							"name": "Drops a Facade",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const isLocal = pm.environment.get(\"baseurl_dc2\").includes('localhost');",
											"",
											"if(!isLocal) {",
											"    pm.test(\"Status code is 400\", function () {",
											"        pm.response.to.have.status(400);",
											"    });",
											"",
											"    pm.test(\"Body matches string\", function () {",
											"        pm.expect(pm.response.text()).to.eql('Unknown placement string: not_existing:placement');",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-BV-API-Key",
										"value": "{{api_key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseurl_dc2}}/sor/1/_facade/{{table}}?audit=comment:'facade+deletion'&placement=not_existing:placement",
									"host": [
										"{{baseurl_dc2}}"
									],
									"path": [
										"sor",
										"1",
										"_facade",
										"{{table}}"
									],
									"query": [
										{
											"key": "audit",
											"value": "comment:'facade+deletion'"
										},
										{
											"key": "placement",
											"value": "not_existing:placement"
										}
									]
								},
								"description": "Returns a SuccessResponse if facade is dropped"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseurl_dc2}}/sor/1/_facade/{{table}}",
											"host": [
												"{{baseurl_dc2}}"
											],
											"path": [
												"sor",
												"1",
												"_facade",
												"{{table}}"
											],
											"query": [
												{
													"key": "audit",
													"value": ""
												},
												{
													"key": "placement",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "table"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"debug\": {}\n}"
								}
							]
						},
						{
							"name": "Drops a table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const isLocal = pm.environment.get(\"baseurl_dc2\").includes('localhost');",
											"",
											"if(!isLocal) {",
											"    pm.test(\"Status code is 200\", function () {",
											"        pm.response.to.have.status(200);",
											"    });",
											"",
											"    pm.test(\"Body matches string\", function () {",
											"        pm.expect(pm.response.json()).to.eql({\"success\":true});",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-BV-API-Key",
										"type": "text",
										"value": "{{api_key}}"
									}
								],
								"url": {
									"raw": "{{baseurl_dc1}}/sor/1/_table/{{table}}?audit=comment:'table_removal'",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"sor",
										"1",
										"_table",
										"{{table}}"
									],
									"query": [
										{
											"key": "audit",
											"value": "comment:'table_removal'"
										}
									]
								},
								"description": "Returns a SuccessResponse if table is dropped"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseurl_dc1}}/sor/1/_table/{{table}}",
											"host": [
												"{{baseurl_dc1}}"
											],
											"path": [
												"sor",
												"1",
												"_table",
												"{{table}}"
											],
											"query": [
												{
													"key": "audit",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "table"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"success\": false,\n \"debug\": {}\n}"
								}
							]
						}
					]
				},
				{
					"name": "Drops a Facade",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl_dc1}}/sor/1/_facade/{{table}}",
							"host": [
								"{{baseurl_dc1}}"
							],
							"path": [
								"sor",
								"1",
								"_facade",
								"{{table}}"
							],
							"query": [
								{
									"key": "audit",
									"value": ""
								},
								{
									"key": "placement",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "table",
									"value": "",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns a SuccessResponse if facade is dropped"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseurl_dc1}}/sor/1/_facade/{{table}}",
									"host": [
										"{{baseurl_dc1}}"
									],
									"path": [
										"sor",
										"1",
										"_facade",
										"{{table}}"
									],
									"query": [
										{
											"key": "audit",
											"value": ""
										},
										{
											"key": "placement",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "table"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"success\": false,\n \"debug\": {}\n}"
						}
					]
				}
			]
		}
	]
}